openapi: 3.1.0
info:
  title: 'Ecommerce JaggerStore'
  version: '1.0.0'
  description: 'Documentacion para administrar los productos en API'
  contact:
    name: 'Nicolas Andreolli'
servers:
  - url: 'http://localhost:8080' 

  #ROUTES
paths:
  /api/products:
    get:
      summary: Get product list.
      tags:
        - Products:
      responses:
        "200":
          description: The products was successfully obtained.
        "400":
          description: Products not found.
        "500":
          description: An internal server error ocurred.

  /api/products/create:
    get:
      summary:
      tags:
        - Create Product:
      responses:
        "200":
          description: Form to create product successfully obtained.
        "400":
          description: Error getting the form.
        "500":
          description: An internal server error ocurred.

  /api/products/mockingproducts:
    get:
      summary:
      tags:
        - Mocking Products:
      responses:
        "200":
          description: The mocking products was successfully obtained.
        "400":
          description: Mocking products not found.
        "500":
          description: An internal server error ocurred.

  /api/products/:
    post:
      summary: Create Product.
      tags:
        - CreateProduct:
      responses:
        "200":
          description: The product was successfully created.
        "400":
          description: Error when creating the product.
        "500":
          description: An internal server error ocurred.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"

  /api/products/delete-product:
    post:
      summary: Delete product from DB.
      tags:
        - DeleteProduct:
      responses:
        "200":
          description: The product has been deleted.
        "400":
          description: Error when deleting the product.
        "500":
          description: An internal server error ocurred.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"

#COMPONENTS
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: ID auto-generated by MongoDB
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        price:
          type: number
          required: true
        status:
          type: boolean
          required: true
        code:
          type: string
          required: true
        stock:
          type: number
          required: true
        category:
          type: string
          required: true
        thumbnail:
          type: array
          items:
            type: string
